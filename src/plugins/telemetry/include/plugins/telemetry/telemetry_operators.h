// WARNING: THIS FILE IS AUTOGENERATED! As such, it should not be edited.
// Edits need to be made to the proto files
// (see https://github.com/mavlink/MAVSDK-Proto/blob/master/protos/telemetry/telemetry.proto)

#pragma once

#include "telemetry.h"

namespace mavsdk {

/**
 * @brief Equal operator to compare two `Telemetry::Position` objects.
 *
 * @return `true` if items are equal.
 */
bool operator==(const Telemetry::Position& lhs, const Telemetry::Position& rhs);

/**
 * @brief Stream operator to print information about a `Telemetry::Position`.
 *
 * @return A reference to the stream.
 */
std::ostream& operator<<(std::ostream& str, Telemetry::Position const& position);


/**
 * @brief Equal operator to compare two `Telemetry::Quaternion` objects.
 *
 * @return `true` if items are equal.
 */
bool operator==(const Telemetry::Quaternion& lhs, const Telemetry::Quaternion& rhs);

/**
 * @brief Stream operator to print information about a `Telemetry::Quaternion`.
 *
 * @return A reference to the stream.
 */
std::ostream& operator<<(std::ostream& str, Telemetry::Quaternion const& quaternion);


/**
 * @brief Equal operator to compare two `Telemetry::EulerAngle` objects.
 *
 * @return `true` if items are equal.
 */
bool operator==(const Telemetry::EulerAngle& lhs, const Telemetry::EulerAngle& rhs);

/**
 * @brief Stream operator to print information about a `Telemetry::EulerAngle`.
 *
 * @return A reference to the stream.
 */
std::ostream& operator<<(std::ostream& str, Telemetry::EulerAngle const& euler_angle);


/**
 * @brief Equal operator to compare two `Telemetry::AngularVelocityBody` objects.
 *
 * @return `true` if items are equal.
 */
bool operator==(const Telemetry::AngularVelocityBody& lhs, const Telemetry::AngularVelocityBody& rhs);

/**
 * @brief Stream operator to print information about a `Telemetry::AngularVelocityBody`.
 *
 * @return A reference to the stream.
 */
std::ostream& operator<<(std::ostream& str, Telemetry::AngularVelocityBody const& angular_velocity_body);


/**
 * @brief Equal operator to compare two `Telemetry::SpeedNed` objects.
 *
 * @return `true` if items are equal.
 */
bool operator==(const Telemetry::SpeedNed& lhs, const Telemetry::SpeedNed& rhs);

/**
 * @brief Stream operator to print information about a `Telemetry::SpeedNed`.
 *
 * @return A reference to the stream.
 */
std::ostream& operator<<(std::ostream& str, Telemetry::SpeedNed const& speed_ned);


/**
 * @brief Equal operator to compare two `Telemetry::GpsInfo` objects.
 *
 * @return `true` if items are equal.
 */
bool operator==(const Telemetry::GpsInfo& lhs, const Telemetry::GpsInfo& rhs);

/**
 * @brief Stream operator to print information about a `Telemetry::GpsInfo`.
 *
 * @return A reference to the stream.
 */
std::ostream& operator<<(std::ostream& str, Telemetry::GpsInfo const& gps_info);


/**
 * @brief Equal operator to compare two `Telemetry::Battery` objects.
 *
 * @return `true` if items are equal.
 */
bool operator==(const Telemetry::Battery& lhs, const Telemetry::Battery& rhs);

/**
 * @brief Stream operator to print information about a `Telemetry::Battery`.
 *
 * @return A reference to the stream.
 */
std::ostream& operator<<(std::ostream& str, Telemetry::Battery const& battery);


/**
 * @brief Equal operator to compare two `Telemetry::Health` objects.
 *
 * @return `true` if items are equal.
 */
bool operator==(const Telemetry::Health& lhs, const Telemetry::Health& rhs);

/**
 * @brief Stream operator to print information about a `Telemetry::Health`.
 *
 * @return A reference to the stream.
 */
std::ostream& operator<<(std::ostream& str, Telemetry::Health const& health);


/**
 * @brief Equal operator to compare two `Telemetry::RcStatus` objects.
 *
 * @return `true` if items are equal.
 */
bool operator==(const Telemetry::RcStatus& lhs, const Telemetry::RcStatus& rhs);

/**
 * @brief Stream operator to print information about a `Telemetry::RcStatus`.
 *
 * @return A reference to the stream.
 */
std::ostream& operator<<(std::ostream& str, Telemetry::RcStatus const& rc_status);


/**
 * @brief Equal operator to compare two `Telemetry::StatusText` objects.
 *
 * @return `true` if items are equal.
 */
bool operator==(const Telemetry::StatusText& lhs, const Telemetry::StatusText& rhs);

/**
 * @brief Stream operator to print information about a `Telemetry::StatusText`.
 *
 * @return A reference to the stream.
 */
std::ostream& operator<<(std::ostream& str, Telemetry::StatusText const& status_text);


/**
 * @brief Equal operator to compare two `Telemetry::ActuatorControlTarget` objects.
 *
 * @return `true` if items are equal.
 */
bool operator==(const Telemetry::ActuatorControlTarget& lhs, const Telemetry::ActuatorControlTarget& rhs);

/**
 * @brief Stream operator to print information about a `Telemetry::ActuatorControlTarget`.
 *
 * @return A reference to the stream.
 */
std::ostream& operator<<(std::ostream& str, Telemetry::ActuatorControlTarget const& actuator_control_target);


/**
 * @brief Equal operator to compare two `Telemetry::ActuatorOutputStatus` objects.
 *
 * @return `true` if items are equal.
 */
bool operator==(const Telemetry::ActuatorOutputStatus& lhs, const Telemetry::ActuatorOutputStatus& rhs);

/**
 * @brief Stream operator to print information about a `Telemetry::ActuatorOutputStatus`.
 *
 * @return A reference to the stream.
 */
std::ostream& operator<<(std::ostream& str, Telemetry::ActuatorOutputStatus const& actuator_output_status);


/**
 * @brief Equal operator to compare two `Telemetry::Covariance` objects.
 *
 * @return `true` if items are equal.
 */
bool operator==(const Telemetry::Covariance& lhs, const Telemetry::Covariance& rhs);

/**
 * @brief Stream operator to print information about a `Telemetry::Covariance`.
 *
 * @return A reference to the stream.
 */
std::ostream& operator<<(std::ostream& str, Telemetry::Covariance const& covariance);


/**
 * @brief Equal operator to compare two `Telemetry::VelocityBody` objects.
 *
 * @return `true` if items are equal.
 */
bool operator==(const Telemetry::VelocityBody& lhs, const Telemetry::VelocityBody& rhs);

/**
 * @brief Stream operator to print information about a `Telemetry::VelocityBody`.
 *
 * @return A reference to the stream.
 */
std::ostream& operator<<(std::ostream& str, Telemetry::VelocityBody const& velocity_body);


/**
 * @brief Equal operator to compare two `Telemetry::PositionBody` objects.
 *
 * @return `true` if items are equal.
 */
bool operator==(const Telemetry::PositionBody& lhs, const Telemetry::PositionBody& rhs);

/**
 * @brief Stream operator to print information about a `Telemetry::PositionBody`.
 *
 * @return A reference to the stream.
 */
std::ostream& operator<<(std::ostream& str, Telemetry::PositionBody const& position_body);


/**
 * @brief Equal operator to compare two `Telemetry::Odometry` objects.
 *
 * @return `true` if items are equal.
 */
bool operator==(const Telemetry::Odometry& lhs, const Telemetry::Odometry& rhs);

/**
 * @brief Stream operator to print information about a `Telemetry::Odometry`.
 *
 * @return A reference to the stream.
 */
std::ostream& operator<<(std::ostream& str, Telemetry::Odometry const& odometry);


/**
 * @brief Equal operator to compare two `Telemetry::PositionNed` objects.
 *
 * @return `true` if items are equal.
 */
bool operator==(const Telemetry::PositionNed& lhs, const Telemetry::PositionNed& rhs);

/**
 * @brief Stream operator to print information about a `Telemetry::PositionNed`.
 *
 * @return A reference to the stream.
 */
std::ostream& operator<<(std::ostream& str, Telemetry::PositionNed const& position_ned);


/**
 * @brief Equal operator to compare two `Telemetry::VelocityNed` objects.
 *
 * @return `true` if items are equal.
 */
bool operator==(const Telemetry::VelocityNed& lhs, const Telemetry::VelocityNed& rhs);

/**
 * @brief Stream operator to print information about a `Telemetry::VelocityNed`.
 *
 * @return A reference to the stream.
 */
std::ostream& operator<<(std::ostream& str, Telemetry::VelocityNed const& velocity_ned);


/**
 * @brief Equal operator to compare two `Telemetry::PositionVelocityNed` objects.
 *
 * @return `true` if items are equal.
 */
bool operator==(const Telemetry::PositionVelocityNed& lhs, const Telemetry::PositionVelocityNed& rhs);

/**
 * @brief Stream operator to print information about a `Telemetry::PositionVelocityNed`.
 *
 * @return A reference to the stream.
 */
std::ostream& operator<<(std::ostream& str, Telemetry::PositionVelocityNed const& position_velocity_ned);


/**
 * @brief Equal operator to compare two `Telemetry::GroundTruth` objects.
 *
 * @return `true` if items are equal.
 */
bool operator==(const Telemetry::GroundTruth& lhs, const Telemetry::GroundTruth& rhs);

/**
 * @brief Stream operator to print information about a `Telemetry::GroundTruth`.
 *
 * @return A reference to the stream.
 */
std::ostream& operator<<(std::ostream& str, Telemetry::GroundTruth const& ground_truth);


/**
 * @brief Equal operator to compare two `Telemetry::FixedwingMetrics` objects.
 *
 * @return `true` if items are equal.
 */
bool operator==(const Telemetry::FixedwingMetrics& lhs, const Telemetry::FixedwingMetrics& rhs);

/**
 * @brief Stream operator to print information about a `Telemetry::FixedwingMetrics`.
 *
 * @return A reference to the stream.
 */
std::ostream& operator<<(std::ostream& str, Telemetry::FixedwingMetrics const& fixedwing_metrics);


/**
 * @brief Equal operator to compare two `Telemetry::AccelerationFrd` objects.
 *
 * @return `true` if items are equal.
 */
bool operator==(const Telemetry::AccelerationFrd& lhs, const Telemetry::AccelerationFrd& rhs);

/**
 * @brief Stream operator to print information about a `Telemetry::AccelerationFrd`.
 *
 * @return A reference to the stream.
 */
std::ostream& operator<<(std::ostream& str, Telemetry::AccelerationFrd const& acceleration_frd);


/**
 * @brief Equal operator to compare two `Telemetry::AngularVelocityFrd` objects.
 *
 * @return `true` if items are equal.
 */
bool operator==(const Telemetry::AngularVelocityFrd& lhs, const Telemetry::AngularVelocityFrd& rhs);

/**
 * @brief Stream operator to print information about a `Telemetry::AngularVelocityFrd`.
 *
 * @return A reference to the stream.
 */
std::ostream& operator<<(std::ostream& str, Telemetry::AngularVelocityFrd const& angular_velocity_frd);


/**
 * @brief Equal operator to compare two `Telemetry::MagneticFieldFrd` objects.
 *
 * @return `true` if items are equal.
 */
bool operator==(const Telemetry::MagneticFieldFrd& lhs, const Telemetry::MagneticFieldFrd& rhs);

/**
 * @brief Stream operator to print information about a `Telemetry::MagneticFieldFrd`.
 *
 * @return A reference to the stream.
 */
std::ostream& operator<<(std::ostream& str, Telemetry::MagneticFieldFrd const& magnetic_field_frd);


/**
 * @brief Equal operator to compare two `Telemetry::Imu` objects.
 *
 * @return `true` if items are equal.
 */
bool operator==(const Telemetry::Imu& lhs, const Telemetry::Imu& rhs);

/**
 * @brief Stream operator to print information about a `Telemetry::Imu`.
 *
 * @return A reference to the stream.
 */
std::ostream& operator<<(std::ostream& str, Telemetry::Imu const& imu);






/**
 * @brief Stream operator to print information about a `Telemetry::FixType`.
 *
 * @return A reference to the stream.
 */
std::ostream& operator<<(std::ostream& str, Telemetry::FixType const& fix_type);

/**
 * @brief Stream operator to print information about a `Telemetry::FlightMode`.
 *
 * @return A reference to the stream.
 */
std::ostream& operator<<(std::ostream& str, Telemetry::FlightMode const& flight_mode);

/**
 * @brief Stream operator to print information about a `Telemetry::LandedState`.
 *
 * @return A reference to the stream.
 */
std::ostream& operator<<(std::ostream& str, Telemetry::LandedState const& landed_state);

} // namespace mavsdk